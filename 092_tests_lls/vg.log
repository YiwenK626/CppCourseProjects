==17150== Memcheck, a memory error detector
==17150== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17150== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==17150== Command: ./test-lls
==17150== Parent PID: 17149
==17150== 
==17150== Invalid write of size 8
==17150==    at 0x1094EF: IntList::remove(int const&) (il9.cpp:61)
==17150==    by 0x10917B: testList() (in /home/yw377/ece551/092_tests_lls/test-lls)
==17150==    by 0x108DA2: main (in /home/yw377/ece551/092_tests_lls/test-lls)
==17150==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==17150== 
==17150== 
==17150== Process terminating with default action of signal 11 (SIGSEGV)
==17150==  Access not within mapped region at address 0x10
==17150==    at 0x1094EF: IntList::remove(int const&) (il9.cpp:61)
==17150==    by 0x10917B: testList() (in /home/yw377/ece551/092_tests_lls/test-lls)
==17150==    by 0x108DA2: main (in /home/yw377/ece551/092_tests_lls/test-lls)
==17150==  If you believe this happened as a result of a stack
==17150==  overflow in your program's main thread (unlikely but
==17150==  possible), you can try to increase the size of the
==17150==  main thread stack using the --main-stacksize= flag.
==17150==  The main thread stack size used in this run was 8720384.
==17150== 
==17150== HEAP SUMMARY:
==17150==     in use at exit: 168 bytes in 7 blocks
==17150==   total heap usage: 12 allocs, 5 frees, 72,968 bytes allocated
==17150== 
==17150== LEAK SUMMARY:
==17150==    definitely lost: 0 bytes in 0 blocks
==17150==    indirectly lost: 0 bytes in 0 blocks
==17150==      possibly lost: 0 bytes in 0 blocks
==17150==    still reachable: 168 bytes in 7 blocks
==17150==         suppressed: 0 bytes in 0 blocks
==17150== Reachable blocks (those to which a pointer was found) are not shown.
==17150== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==17150== 
==17150== For counts of detected and suppressed errors, rerun with: -v
==17150== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
